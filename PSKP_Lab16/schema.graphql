schema {
    query: Query,
    mutation: Mutation
}



type Faculty {
    faculty: String!
    faculty_name: String!
    pulpits: [Pulpit!]
}

type Pulpit {
    pulpit: String!
    pulpit_name: String!
    faculty: String!
    teachers: [Teacher!]
    subjects: [Subject!]
}

type Teacher {
    teacher: String!
    teacher_name: String!
    pulpit: String!
}

type Subject {
    subject: String!
    subject_name: String!
    pulpit: String!
}

type TeachersByFaculty {
    faculty: String!
    teachers: [Teacher]
}

type SubjectsByFaculty {
    faculty: String!
    pulpit: String!
    pulpit_name: String!
    subjects: [Subject]
}



input inFaculty {
    faculty: String!
    faculty_name: String!
}

input inPulpit {
    pulpit: String!
    pulpit_name: String!
    faculty: String!
}

input inTeacher {
    teacher: String!
    teacher_name: String!
    pulpit: String!
}

input inSubject {
    subject: String!
    subject_name: String!
    pulpit: String!
}



type Query {
    getFaculties: [Faculty]
    getPulpits: [Pulpit]
    getTeachers: [Teacher]
    getSubjects: [Subject]

    getFaculties(faculty: String!): Faculty
    getPulpits(pulpit: String!): Pulpit
    getTeachers(teacher: String!): Teacher
    getSubjects(subject: String!): Subject

    getPulpitsByFaculty(faculty: String): [Pulpit]
    getTeachersByPulpit(pulpit: String): [Teacher]
    getSubjectsByPulpit(pulpit: String): [Subject]
    getTeachersByFaculty(faculty: String): [TeachersByFaculty]
    getSubjectsByFaculty(faculty: String): [SubjectsByFaculty]
}

type Mutation {
    setFaculty(faculty: inFaculty!): Faculty
    setPulpit(pulpit: inPulpit!): Pulpit
    setTeacher(teacher: inTeacher!): Teacher
    setSubject(subject: inSubject!): Subject
}